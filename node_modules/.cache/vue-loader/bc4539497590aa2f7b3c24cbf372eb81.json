{"remainingRequest":"/home/ahmed/apps/vue-spring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ahmed/apps/vue-spring/src/views/About.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ahmed/apps/vue-spring/src/views/About.vue","mtime":1600521425823},{"path":"/home/ahmed/apps/vue-spring/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ahmed/apps/vue-spring/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ahmed/apps/vue-spring/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ahmed/apps/vue-spring/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdhZGRQb3N0JywKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbW1lbnQ6ICcnLAogICAgICBwb3N0RGF0YTogewogICAgICAgIGNvbW1lbnRzOiBbXSwKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnCgogICAgICB9CgogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyhbCiAgICAgICdhZGRQb3N0JwogICAgXSksCiAgICBzdWJtaXRIYW5kbGVyICgpIHsKICAgICAgY29uc3QgeyB0aXRsZSwgZGVzY3JpcHRpb24sIGNvbW1lbnRzIH0gPSB0aGlzLnBvc3REYXRhCiAgICAgIGNvbnN0IHBheWxvYWQgPSB7CiAgICAgICAgdGl0bGUsCiAgICAgICAgZGVzY3JpcHRpb24sCiAgICAgICAgY29tbWVudHMKICAgICAgfQogICAgICB0aGlzLmFkZFBvc3QocGF5bG9hZCkKICAgICAgdGhpcy5wb3N0RGF0YSA9IHsKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIGNvbW1lbnRzOiBbXQogICAgICB9CiAgICB9LAogICAgYWRkQ29tbWVudHMgKCkgewogICAgICB0aGlzLnBvc3REYXRhLmNvbW1lbnRzLnB1c2godGhpcy5jb21tZW50KQogICAgICB0aGlzLmNvbW1lbnQgPSAnJwogICAgfQogIH0KfQo="},{"version":3,"sources":["About.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"About.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"about\">\n    <div class=\"container\">\n\n    <h1>add post</h1>\n    <form v-on:submit.enter.prevent>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">post title</label>\n    <input type=\"text\" class=\"form-control\" v-model=\"postData.title\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n    <!-- <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small> -->\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">des</label>\n    <input type=\"text\" class=\"form-control\" v-model=\"postData.description\" id=\"exampleInputPassword1\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">comments</label>\n    <input type=\"text\" v-model=\"comment\" class=\"form-control\" id=\"exampleInputPassword1\">\n      <button type=\"submit\" class=\"btn btn-primary\"  @click.prevent=\"addComments()\">add</button>\n\n  </div>\n  <!-- <div class=\"form-group form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n  </div> -->\n  <button type=\"submit\" class=\"btn btn-primary\"  @click=\"submitHandler()\">Submit</button>\n</form>\n    <h1>{{comment}}</h1>\n\n  </div></div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'addPost',\n  data () {\n    return {\n      comment: '',\n      postData: {\n        comments: [],\n        title: '',\n        description: ''\n\n      }\n\n    }\n  },\n  methods: {\n    ...mapActions([\n      'addPost'\n    ]),\n    submitHandler () {\n      const { title, description, comments } = this.postData\n      const payload = {\n        title,\n        description,\n        comments\n      }\n      this.addPost(payload)\n      this.postData = {\n        title: '',\n        description: '',\n        comments: []\n      }\n    },\n    addComments () {\n      this.postData.comments.push(this.comment)\n      this.comment = ''\n    }\n  }\n}\n</script>\n"]}]}